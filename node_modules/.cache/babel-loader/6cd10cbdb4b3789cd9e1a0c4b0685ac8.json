{"ast":null,"code":"var _jsxFileName = \"D:\\\\raect_job_apply\\\\src\\\\components\\\\JobItem.js\";\nimport React, { useContext, useRef } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport JobsContext from '../context/jobs';\nimport useObserver from '../custom-hooks/observer';\nimport Image from './Image';\n\nconst JobItem = props => {\n  const {\n    onItemClick\n  } = useContext(JobsContext);\n  const imageRef = useRef();\n  const [isVisible] = useObserver(imageRef);\n  const {\n    id,\n    type,\n    created_at,\n    company,\n    location,\n    title,\n    company_logo,\n    index\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-item\",\n    index: index + 1,\n    onClick: () => onItemClick(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"company-logo\",\n    ref: imageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, isVisible && /*#__PURE__*/React.createElement(Image, {\n    src: company_logo,\n    alt: company,\n    width: \"100\",\n    height: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, location, \" | \", type), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"company-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, company)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Posted \", moment(new Date(created_at)).fromNow())));\n};\n\nJobItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  created_at: PropTypes.string.isRequired,\n  company: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  company_logo: PropTypes.string,\n  index: PropTypes.number.isRequired\n};\nexport default JobItem;","map":{"version":3,"sources":["D:/raect_job_apply/src/components/JobItem.js"],"names":["React","useContext","useRef","moment","PropTypes","JobsContext","useObserver","Image","JobItem","props","onItemClick","imageRef","isVisible","id","type","created_at","company","location","title","company_logo","index","Date","fromNow","propTypes","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAkBT,UAAU,CAACI,WAAD,CAAlC;AACA,QAAMM,QAAQ,GAAGT,MAAM,EAAvB;AACA,QAAM,CAACU,SAAD,IAAcN,WAAW,CAACK,QAAD,CAA/B;AAEA,QAAM;AACJE,IAAAA,EADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,KANI;AAOJC,IAAAA,YAPI;AAQJC,IAAAA;AARI,MASFX,KATJ;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAEW,KAAK,GAAG,CAAzC;AAA4C,IAAA,OAAO,EAAE,MAAMV,WAAW,CAACG,EAAD,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,GAAG,EAAEF,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,SAAS,iBACR,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEO,YAAZ;AAA0B,IAAA,GAAG,EAAEH,OAA/B;AAAwC,IAAA,KAAK,EAAC,KAA9C;AAAoD,IAAA,MAAM,EAAC,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF,eAME;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BE,KAA5B,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,SACgBH,IADhB,CAFF,eAKE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BE,OAA/B,CALF,CANF,eAaE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUb,MAAM,CAAC,IAAIkB,IAAJ,CAASN,UAAT,CAAD,CAAN,CAA6BO,OAA7B,EADV,CADF,CAbF,CADF;AAqBD,CArCD;;AAuCAd,OAAO,CAACe,SAAR,GAAoB;AAClBV,EAAAA,EAAE,EAAET,SAAS,CAACoB,MAAV,CAAiBC,UADH;AAElBX,EAAAA,IAAI,EAAEV,SAAS,CAACoB,MAAV,CAAiBC,UAFL;AAGlBV,EAAAA,UAAU,EAAEX,SAAS,CAACoB,MAAV,CAAiBC,UAHX;AAIlBT,EAAAA,OAAO,EAAEZ,SAAS,CAACoB,MAAV,CAAiBC,UAJR;AAKlBR,EAAAA,QAAQ,EAAEb,SAAS,CAACoB,MAAV,CAAiBC,UALT;AAMlBP,EAAAA,KAAK,EAAEd,SAAS,CAACoB,MAAV,CAAiBC,UANN;AAOlBN,EAAAA,YAAY,EAAEf,SAAS,CAACoB,MAPN;AAQlBJ,EAAAA,KAAK,EAAEhB,SAAS,CAACsB,MAAV,CAAiBD;AARN,CAApB;AAWA,eAAejB,OAAf","sourcesContent":["import React, { useContext, useRef } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport JobsContext from '../context/jobs';\nimport useObserver from '../custom-hooks/observer';\nimport Image from './Image';\n\nconst JobItem = (props) => {\n  const { onItemClick } = useContext(JobsContext);\n  const imageRef = useRef();\n  const [isVisible] = useObserver(imageRef);\n\n  const {\n    id,\n    type,\n    created_at,\n    company,\n    location,\n    title,\n    company_logo,\n    index\n  } = props;\n\n  return (\n    <div className=\"job-item\" index={index + 1} onClick={() => onItemClick(id)}>\n      <div className=\"company-logo\" ref={imageRef}>\n        {isVisible && (\n          <Image src={company_logo} alt={company} width=\"100\" height=\"100\" />\n        )}\n      </div>\n      <div className=\"job-info\">\n        <div className=\"job-title\">{title}</div>\n        <div className=\"job-location\">\n          {location} | {type}\n        </div>\n        <div className=\"company-name\">{company}</div>\n      </div>\n      <div className=\"post-info\">\n        <div className=\"post-time\">\n          Posted {moment(new Date(created_at)).fromNow()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nJobItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  created_at: PropTypes.string.isRequired,\n  company: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  company_logo: PropTypes.string,\n  index: PropTypes.number.isRequired\n};\n\nexport default JobItem;\n"]},"metadata":{},"sourceType":"module"}