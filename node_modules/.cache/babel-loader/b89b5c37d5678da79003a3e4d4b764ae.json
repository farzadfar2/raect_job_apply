{"ast":null,"code":"import axios from 'axios';\nimport moment from 'moment';\nimport { BASE_API_URL } from '../utils/constants';\nimport { setErrors } from './errors';\nexport const initiateGetJobs = (data, isLoadMore) => {\n  return async dispatch => {\n    try {\n      let {\n        description,\n        full_time,\n        location,\n        page\n      } = data;\n      description = description ? encodeURIComponent(description) : '';\n      location = location ? encodeURIComponent(location) : '';\n      full_time = full_time ? '&full_time=true' : '';\n\n      if (page) {\n        page = parseInt(page);\n        page = isNaN(page) ? '' : `&page=${page}`;\n      }\n\n      const jobs = await axios.get(`${BASE_API_URL}/jobs?description=${description}&location=${location}${full_time}${page}`); // const jobs = await axios.get('./jobs.json');\n\n      const sortedJobs = jobs.data.sort((a, b) => moment(new Date(b.created_at)) - moment(new Date(a.created_at)));\n\n      if (isLoadMore) {\n        return dispatch(setLoadMoreJobs(sortedJobs));\n      } else {\n        return dispatch(setJobs(sortedJobs));\n      }\n    } catch (error) {\n      error.response && dispatch(setErrors(error.response.data));\n    }\n  };\n};\nexport const setJobs = jobs => ({\n  type: 'SET_JOBS',\n  jobs\n});\nexport const setLoadMoreJobs = jobs => ({\n  type: 'LOAD_MORE_JOBS',\n  jobs\n});","map":{"version":3,"sources":["D:/github-jobs-react-app-master/src/actions/jobs.js"],"names":["axios","moment","BASE_API_URL","setErrors","initiateGetJobs","data","isLoadMore","dispatch","description","full_time","location","page","encodeURIComponent","parseInt","isNaN","jobs","get","sortedJobs","sort","a","b","Date","created_at","setLoadMoreJobs","setJobs","error","response","type"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,IAAD,EAAOC,UAAP,KAAsB;AACnD,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACF,UAAI;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,SAAf;AAA0BC,QAAAA,QAA1B;AAAoCC,QAAAA;AAApC,UAA6CN,IAAjD;AAEAG,MAAAA,WAAW,GAAGA,WAAW,GAAGI,kBAAkB,CAACJ,WAAD,CAArB,GAAqC,EAA9D;AACAE,MAAAA,QAAQ,GAAGA,QAAQ,GAAGE,kBAAkB,CAACF,QAAD,CAArB,GAAkC,EAArD;AACAD,MAAAA,SAAS,GAAGA,SAAS,GAAG,iBAAH,GAAuB,EAA5C;;AAEA,UAAIE,IAAJ,EAAU;AACRA,QAAAA,IAAI,GAAGE,QAAQ,CAACF,IAAD,CAAf;AACAA,QAAAA,IAAI,GAAGG,KAAK,CAACH,IAAD,CAAL,GAAc,EAAd,GAAoB,SAAQA,IAAK,EAAxC;AACD;;AAED,YAAMI,IAAI,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAChB,GAAEd,YAAa,qBAAoBM,WAAY,aAAYE,QAAS,GAAED,SAAU,GAAEE,IAAK,EADvE,CAAnB,CAZE,CAeF;;AACA,YAAMM,UAAU,GAAGF,IAAI,CAACV,IAAL,CAAUa,IAAV,CACjB,CAACC,CAAD,EAAIC,CAAJ,KACEnB,MAAM,CAAC,IAAIoB,IAAJ,CAASD,CAAC,CAACE,UAAX,CAAD,CAAN,GAAiCrB,MAAM,CAAC,IAAIoB,IAAJ,CAASF,CAAC,CAACG,UAAX,CAAD,CAFxB,CAAnB;;AAKA,UAAIhB,UAAJ,EAAgB;AACd,eAAOC,QAAQ,CAACgB,eAAe,CAACN,UAAD,CAAhB,CAAf;AACD,OAFD,MAEO;AACL,eAAOV,QAAQ,CAACiB,OAAO,CAACP,UAAD,CAAR,CAAf;AACD;AACF,KA1BD,CA0BE,OAAOQ,KAAP,EAAc;AACdA,MAAAA,KAAK,CAACC,QAAN,IAAkBnB,QAAQ,CAACJ,SAAS,CAACsB,KAAK,CAACC,QAAN,CAAerB,IAAhB,CAAV,CAA1B;AACD;AACF,GA9BD;AA+BD,CAhCM;AAkCP,OAAO,MAAMmB,OAAO,GAAIT,IAAD,KAAW;AAChCY,EAAAA,IAAI,EAAE,UAD0B;AAEhCZ,EAAAA;AAFgC,CAAX,CAAhB;AAKP,OAAO,MAAMQ,eAAe,GAAIR,IAAD,KAAW;AACxCY,EAAAA,IAAI,EAAE,gBADkC;AAExCZ,EAAAA;AAFwC,CAAX,CAAxB","sourcesContent":["import axios from 'axios';\nimport moment from 'moment';\nimport { BASE_API_URL } from '../utils/constants';\nimport { setErrors } from './errors';\n\nexport const initiateGetJobs = (data, isLoadMore) => {\n  return async (dispatch) => {\n    try {\n      let { description, full_time, location, page } = data;\n\n      description = description ? encodeURIComponent(description) : '';\n      location = location ? encodeURIComponent(location) : '';\n      full_time = full_time ? '&full_time=true' : '';\n\n      if (page) {\n        page = parseInt(page);\n        page = isNaN(page) ? '' : `&page=${page}`;\n      }\n\n      const jobs = await axios.get(\n        `${BASE_API_URL}/jobs?description=${description}&location=${location}${full_time}${page}`\n      );\n      // const jobs = await axios.get('./jobs.json');\n      const sortedJobs = jobs.data.sort(\n        (a, b) =>\n          moment(new Date(b.created_at)) - moment(new Date(a.created_at))\n      );\n\n      if (isLoadMore) {\n        return dispatch(setLoadMoreJobs(sortedJobs));\n      } else {\n        return dispatch(setJobs(sortedJobs));\n      }\n    } catch (error) {\n      error.response && dispatch(setErrors(error.response.data));\n    }\n  };\n};\n\nexport const setJobs = (jobs) => ({\n  type: 'SET_JOBS',\n  jobs\n});\n\nexport const setLoadMoreJobs = (jobs) => ({\n  type: 'LOAD_MORE_JOBS',\n  jobs\n});\n"]},"metadata":{},"sourceType":"module"}